<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Owner Dashboard - LakshyaFiesta</title>
  <link rel="stylesheet" href="/styles.css" />
  <link rel="icon" type="image/x-icon" href="/images/favicon.ico" />
  <style>
  .tab-switch {
    display: flex;
    justify-content: center;
    margin-bottom: 10px;
    gap: 15px;
  }
  .tab-switch button {
    padding: 6px 16px;
    border: none;
    background-color: #ddd;
    cursor: pointer;
    border-radius: 6px;
  }
  .tab-switch button.active {
    background-color: orange;
    color: white;
    font-weight: bold;
  }
  .food-tab-section {
    max-height: 350px;
    overflow-y: auto;
  }
  .place-order-btn {
  padding: 8px 16px;
  background: orange;
  border: none;
  color: white;
  font-weight: bold;
  border-radius: 5px;
  cursor: pointer;
}

</style>

</head>
<body>
  <header class="restaurant-header">
    <div class="logo-container">
      <div class="menu-icon-block" onclick="toggleDropdown()">
        <span class="menu-icon">‚ò∞</span>
      </div>
      <img src="/images/Lakshya_logo.jpg" alt="LakshyaFiesta Logo" class="logo" />
      <h1 class="restaurant-name">LakshyaFiesta Owner Dashboard</h1>
    </div>
    
    <nav class="dropdown" id="dropdownMenu">
      <a href="/owner/add-staff">Add Staff</a>
      <a href="/owner/add-dish">Add Dish</a>
      <a href="/owner/manage-staff">Manage Staff</a>
      <a href="/owner/bill-history" class="btn">Bill History</a>
      <a href="/owner/bill-analytics"> View Order Trends</a>


      <a href="/owner/logout">Logout</a>
    </nav>
  </header>

  <!-- Add dashboard content here -->


<section class="table-section">
  <!-- Active Tables -->
 <!-- Active Tables -->
<h2>Active Tables</h2>
<div class="table-grid active"></div>
<p id="no-active-msg" class="status-msg" style="font-weight: bold;text-align:center; color: gray;"></p>

</br></br>
  <hr />
<!-- ‚úÖ Empty Tables -->
<h2>Empty Tables</h2>
<div class="table-grid empty"></div>
 <p id="no-empty-msg" class="status-msg" style="font-weight: bold;text-align:center; color: gray;"></p>



  <form action="/owner/add-table" method="POST" style="margin-top: 20px;">
    <button type="submit" class="add-table-btn"> Add New Table</button>
  </form>
</section>

<div id="orderPopup" class="popup-overlay" style="display: none;">
  <div class="popup-box dish-popup" style="max-height: 90vh;">
    <button class="close-popup" onclick="closeOrderPopup()">‚úñ</button>
    <h2 style="text-align:center;">üçΩ Table Food</h2>

    <div class="tab-switch">
      <button onclick="switchFoodTab('ordered')" id="tab-ordered" class="active">Ordered</button>
      <button onclick="switchFoodTab('delivered')" id="tab-delivered">Delivered</button>
    </div>

    <div id="orderedTab" class="food-tab-section"></div>
    <div id="deliveredTab" class="food-tab-section" style="display:none;"></div>

    <div style="text-align: center; margin-top: 20px;">
      <button id="billButton" class="place-order-btn" style="display: none;" onclick="generateBill()">üíµ Generate Bill</button>
    </div>
  </div>
</div>


   <footer class="footer">
  <div class="footer-container">
    <div class="footer-left">
      <h3>Lakshya Fiesta</h3>
      <p>Serving love on every plate since day one.</p>
    </div>

    <div class="footer-center">
      <p><strong>üìû</strong> +91 81859 51583</p>
      <p><strong>üìß</strong> lakshyasunkara2004@gmail.com</p>
      <p><strong>üìç</strong> MG Road, Hyderabad, India</p>
    </div>

    <div class="footer-right">
      <h4>Connect with Us</h4>
      <div class="social-icons">
        <a href="https://wa.me/918185951583" target="_blank" title="WhatsApp"><i class="fab fa-whatsapp"></i></a>
        <a href="https://instagram.com/lakshya_fiesta" target="_blank" title="Instagram"><i class="fab fa-instagram"></i></a>
        <a href="https://twitter.com/lakshya_fiesta" target="_blank" title="X"><i class="fab fa-x-twitter"></i></a>
      </div>
    </div>
  </div>
  <div class="footer-bottom">
    <p>¬© 2025 Lakshya Fiesta. All rights reserved.</p>
  </div>
</footer>
  
 <script>

  function switchFoodTab(tab) {
  document.getElementById("orderedTab").style.display = tab === 'ordered' ? 'block' : 'none';
  document.getElementById("deliveredTab").style.display = tab === 'delivered' ? 'block' : 'none';

  document.getElementById("tab-ordered").classList.toggle("active", tab === 'ordered');
  document.getElementById("tab-delivered").classList.toggle("active", tab === 'delivered');
}

    async function fetchTableData() {
      try {
        const res = await fetch('/api/tables');
        const tables = await res.json();

        const activeGrid = document.querySelector(".table-grid.active");
        const emptyGrid = document.querySelector(".table-grid.empty");
        const noActive = document.getElementById("no-active-msg");
        const noEmpty = document.getElementById("no-empty-msg");

        activeGrid.innerHTML = '';
        emptyGrid.innerHTML = '';
        noActive.textContent = '';
        noEmpty.textContent = '';

        const activeTables = tables.filter(t => t.status !== 'empty');
        const emptyTables = tables.filter(t => t.status === 'empty');

        if (activeTables.length === 0) {
          noActive.textContent = "‚úÖ All tables are currently empty.";
        }

        if (emptyTables.length === 0) {
          noEmpty.textContent = "üö´ All tables are active.";
        }

        activeTables.forEach(t => {
          const card = document.createElement("div");
          card.className = `table-card ${t.status}`;
          card.onclick = () => showOrderPopup(t._id);

          const img = t.serverImage ? t.serverImage : 'profile_icon.png';

          card.innerHTML = `
            <img src="/images/staff/${img}" class="table-img" />
            <div class="timer" id="timer-${t._id}">--:--</div>
            <p><strong>Table:</strong> ${t.tableNo}</p>
            <p><strong>Server:</strong> ${t.serverName || 'Not Assigned'}</p>
            <p><strong>Status:</strong> ${t.status}</p>
          `;
          activeGrid.appendChild(card);

          if (t.orderStartTime) {
            startTimer(`timer-${t._id}`, t.orderStartTime,card, t.status);
          }
        });

        emptyTables.forEach(t => {
          const card = document.createElement("div");
          card.className = `table-card empty`;
          card.innerHTML = `
            <img src="/images/staff/profile_icon.png" class="table-img" />
            <div class="timer">--:--</div>
            <p><strong>Table:</strong> ${t.tableNo}</p>
            <p><strong>Server:</strong> None</p>
            <p><strong>Status:</strong> Empty</p>
          `;
          emptyGrid.appendChild(card);
        });
      } catch (err) {
        console.error("Error loading tables:", err);
      }
    }

    const activeTimers = {};

    function startTimer(id, startTime, cardElement, status) {
  const timerElem = document.getElementById(id);
  if (!timerElem || !cardElement) return;

  if (activeTimers[id]) clearInterval(activeTimers[id]);

  function update() {
    const diff = Date.now() - new Date(startTime);
    const minutes = Math.floor(diff / 60000);
    const seconds = Math.floor((diff % 60000) / 1000);
    timerElem.textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;

    // ‚úÖ Change border shadow only if status is 'waiting' AND time > 20 min
    if ((status === 'waiting' || status === "preparing") && minutes >= 20) {
      cardElement.style.boxShadow = "0 0 15px 4px red";
    } else {
      cardElement.style.boxShadow = ""; // reset if condition not met
    }
  }

  update();
  activeTimers[id] = setInterval(update, 1000);
}


    function toggleDropdown() {
      const d = document.getElementById("dropdownMenu");
      d.style.display = d.style.display === "flex" ? "none" : "flex";
    }

    window.addEventListener('click', function (e) {
      const dropdown = document.getElementById('dropdownMenu');
      const icon = document.querySelector('.menu-icon-block');
      if (!dropdown.contains(e.target) && !icon.contains(e.target)) {
        dropdown.style.display = 'none';
      }
    });

    
    setInterval(fetchTableData, 1000); // update every 2s

   function showOrderPopup(tableId) {
  fetch(`/api/table-food/${tableId}`)
    .then(res => res.json())
    .then(data => {
      const ordered = data.ordered || [];
      const delivered = data.delivered || [];
      console.log("Ordered items:", delivered);
      const orderedTab = document.getElementById("orderedTab");
      const deliveredTab = document.getElementById("deliveredTab");
      const billBtn = document.getElementById("billButton");
      billBtn.dataset.table = tableId;

      orderedTab.innerHTML = '';
      deliveredTab.innerHTML = '';
      billBtn.style.display = "none";

      let total = 0;

      if (ordered.length === 0) {
        orderedTab.innerHTML = "<p style='text-align:center;'>No active orders.</p>";
      } else {
        ordered.forEach(d => {
          total += d.price * d.quantity;
          const item = document.createElement("div");
          item.className = "selected-dish-item";
          item.innerHTML = `
            <img src="${d.image}" />
            <div class="dish-info">
              <div class="dish-header">
                <strong class="dish-name">${d.name}</strong>
                <span class="dish-price">‚Çπ${d.price}</span>
              </div>
              <div class="dish-actions">
                <span style="font-size: 1rem; color: #444;">Qty: ${d.quantity}</span>
              </div>
            </div>
          `;
          orderedTab.appendChild(item);
        });
        
        billBtn.dataset.total = total;
        billBtn.dataset.table = tableId;
      }

      if (delivered.length === 0) {
        deliveredTab.innerHTML = "<p style='text-align:center;'>No delivered items yet.</p>";
      } else {
        delivered.forEach(d => {
          const item = document.createElement("div");
          item.className = "selected-dish-item";
          item.innerHTML = `
            <img src="${d.image}" />
            <div class="dish-info">
              <div class="dish-header">
                <strong class="dish-name">${d.name}</strong>
                <span class="dish-price">‚Çπ${d.price}</span>
              </div>
              <div class="dish-actions">
                <span style="font-size: 1rem; color: #444;">Qty: ${d.quantity}</span>
              </div>
            </div>
          `;
          deliveredTab.appendChild(item);
        });
        billBtn.style.display = "inline-block";
      }

      document.getElementById("orderPopup").style.display = "flex";
      document.getElementById("orderedTab").style.display = "block";
      switchFoodTab('ordered'); // Default to ordered tab
    })
    .catch(err => {
      console.error("‚ùå Failed to fetch table food:", err);
    });
}


function closeOrderPopup() {
  document.getElementById("orderPopup").style.display = "none";
}



function generateBill() {
  const tableId = document.getElementById("billButton").dataset.table;

  fetch(`/owner/generate-bill/${tableId}`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({}) // no paymentMode yet
  })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        const bill = data.bill;
        const popupBox = document.querySelector('.popup-box');
        popupBox.innerHTML = `
          <button class="close-popup" onclick="closeOrderPopup()">‚úñ</button>
          <div style="text-align: center;">
            <h2 style="color: orange; margin-bottom: 5px;">Restaurant Receipt</h2>
            <p style="margin: 0;">LakshyaFiesta</p>
            <div style="text-align:center;">
    <img src="https://res.cloudinary.com/de98eawax/image/upload/v1752140324/Lakshya_logo_umcfit.jpg" alt="LakshyaFiesta Logo" style="width: 150px; margin-bottom: 10px;" />
  </div>
            <p style="margin: 0;">MG Road, Hyderabad, India</p>
            <p style="margin: 0;">+91 81859 51583</p>
            <p style="margin-bottom: 10px;">lakshyasunkara2004@gmail.com</p>
          </div>

          <div style="display: flex; justify-content: space-between; margin-bottom: 10px;">
            <div><strong>Receipt No:</strong> ${bill.billNo}</div>
            <div><strong>Date:</strong> ${new Date(bill.date).toLocaleDateString()}</div>
            <div><strong>Time:</strong> ${new Date(bill.date).toLocaleTimeString()}</div>
          </div>

          <div style="margin-bottom: 10px;">
            <strong>Table:</strong> ${bill.tableNo} |
            <strong>Server:</strong> ${bill.serverName} (${bill.serverEmail})
          </div>

          <table style="width: 100%; border-collapse: collapse; margin-top: 10px;">
            <thead>
              <tr style="background-color: #ffa50033;">
                <th style="text-align:left; padding: 5px;">Item</th>
                <th>Qty</th>
                <th>Dish Price</th>
                <th>Total</th>
              </tr>
            </thead>
            <tbody>
              ${bill.dishes.map(d => `
                <tr>
                  <td style="padding: 4px 6px;">${d.name}</td>
                  <td style="text-align:center;">${d.quantity}</td>
                  <td style="text-align:center;">‚Çπ${d.price}</td>
                  <td style="text-align:right;">‚Çπ${d.quantity * d.price}</td>
                </tr>
              `).join('')}
            </tbody>
          </table>

          <hr style="margin-top: 10px;" />
          <p style="text-align:right;"><strong>Total Amount:</strong> ‚Çπ${bill.totalAmount}</p>

          <div style="margin-top: 10px; text-align:center;">
            <label for="paymentMode"><strong>Payment Mode:</strong></label>
            <select id="paymentMode" style="padding: 5px; margin-left: 10px;">
              <option value="Cash">Cash</option>
              <option value="Card">Card</option>
              <option value="UPI">UPI</option>
              <option value="Online">Online</option>
            </select>
          </div>

          <div style="text-align:center; margin-top: 15px;">
            <button onclick="window.print()" class="place-order-btn">üñ® Print</button>
           <button onclick="updatePaymentMode('${bill.billNo}')" class="place-order-btn">‚úÖ Done</button>

          </div>

          <p style="text-align:center; margin-top: 10px;"><em>Eat As Much As You Like!</em></p>
        `;
      } else {
        alert("‚ùå " + data.message);
      }
    })
    .catch(err => {
      console.error("Error creating bill:", err);
      alert("‚ùå Failed to create bill");
    });
}

function updatePaymentMode(billNo) {
  const mode = document.getElementById("paymentMode").value;

  fetch(`/owner/update-payment/${billNo}`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ paymentMode: mode })
  })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        alert("‚úÖ Payment mode saved!");
        closeOrderPopup(); // or refresh UI if needed
      } else {
        alert("‚ùå " + data.message);
      }
    })
    .catch(err => {
      console.error("Error updating payment mode:", err);
      alert("‚ùå Failed to update payment mode");
    });
}




  </script>
 
 



</body>
</html>
