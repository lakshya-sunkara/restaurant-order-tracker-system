<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Staff Dashboard</title>
  <link rel="stylesheet" href="/styles.css">
  <link rel="icon" type="image/x-icon" href="/images/favicon.ico" />
  <style href="/styles.css" >
    .menu-icon-block {
      cursor: pointer;
      font-size: 1.5rem;
      margin-right: 1rem;
    }
    .dropdown-menu {
      display: none;
      position: absolute;
      background-color: #fff;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      left: 0%;
      top: 150px;
      z-index: 999;
    }
    .dropdown-menu a {
      display: block;
      padding: 10px 20px;
      text-decoration: none;
      color: #333;
    }
    .dropdown-menu a:hover {
      background-color: #fbcd13;
    }
    .profile-info {
      margin-left: auto;
      display: flex;
      align-items: center;
      gap: 1rem;
    }
  </style>
</head>
<body>
  <header class="restaurant-header" style="display: flex; justify-content: space-between; align-items: center; padding: 10px 20px;">
    <div class="menu-icon-block" onclick="toggleDropdown()">
      ☰
    </div>
    <div class="logo-container" style="display: flex; align-items: center;">
      <img src="/images/Lakshya_logo.jpg" alt="LakshyaFiesta Logo" class="logo"  />
      <h1 class="restaurant-name">LakshyaFiesta Staff Dashboard</h1>
    </div>
    <div class="profile-info">
      <p style="font-size: 1.5em;"><strong><%= staff.name %></strong></p>
      <img src="/images/staff/<%= staff.image %>" alt="Profile" style="height: 80px; width: 80px; border-radius: 50%; object-fit: cover;" />
    </div>
  </header>

  <div class="dropdown-menu" id="dropdownMenu">
    <a href="/staff/logout">Logout</a>
  </div>

  <section class="table-section">
  <h2>My Active Tables</h2>
  <p id="activeMsg" style="font-weight: bold;text-align:center; color: gray;"></p>
  <div class="table-grid active"></div>
    </br></br>
  <hr />
  <h2 style="margin-top: 40px;">Empty Tables</h2>
  <p id="emptyMsg" style="font-weight: bold;text-align:center; color: gray;"></p>
  <div class="table-grid empty"></div>
</section>




  <script>
    const staffEmail = "<%= email %>"; // from session

    async function fetchTableData() {
      try {
        const res = await fetch('/api/tables');
        const tables = await res.json();

        const activeContainer = document.querySelector(".table-grid.active");
        const emptyContainer = document.querySelector(".table-grid.empty");
        const activeMsg = document.getElementById("activeMsg");
        const emptyMsg = document.getElementById("emptyMsg");

        activeContainer.innerHTML = '';
        emptyContainer.innerHTML = '';

        const myTables = tables.filter(t => t.status !== 'empty' && t.serverEmail === staffEmail);
        const emptyTables = tables.filter(t => t.status === 'empty');

        if (myTables.length === 0) {
          activeMsg.textContent = "✅ You don't have any active tables right now.";
        } else {
          activeMsg.textContent = "";
        }

        if (emptyTables.length === 0) {
          emptyMsg.textContent = "🚫 All tables are currently in use.";
        } else {
          emptyMsg.textContent = "";
        }

        myTables.forEach(table => {
          const card = createTableCard(table);
          activeContainer.appendChild(card);
          if (table.orderStartTime) {
           startTimer(`timer-${table._id}`, table.orderStartTime, card, table.status);


          }
        });

        emptyTables.forEach(table => {
          const card = createTableCard(table);
          emptyContainer.appendChild(card);
        });

      } catch (err) {
        console.error("Error fetching tables:", err);
      }
    }

    function createTableCard(table) {
      const card = document.createElement("div");
      card.className = `table-card ${table.status}`;
      card.onclick=()=>{
        assignTableAndOpenPopup(table._id);
      } // Optional action

      const imgSrc = table.serverImage ? `/images/staff/${table.serverImage}` : '/images/staff/profile_icon.png';
      const timerId = `timer-${table._id}`;
      const serverName = table.serverName || 'Not Assigned';

      card.innerHTML = `
        <img src="${imgSrc}" class="table-img" />
        <div class="timer" id="${timerId}">${table.orderStartTime ? '--:--' : '--:--'}</div>
        <p><strong>Table:</strong> ${table.tableNo}</p>
        <p><strong>Server:</strong> ${serverName}</p>
        <p><strong>Status:</strong> ${table.status}</p>
      `;

      return card;
    }


    async function assignTableAndOpenPopup(tableId) {
  try {
    const res = await fetch(`/staff/click-table/${tableId}`, {
      method: 'POST'
    });

    const data = await res.json();

    if (data.success) {
      // Redirect to order page (you can open a modal here too)
      window.location.href = `/staff/order/${tableId}`;

    } else {
      alert('❌ Failed to assign table.');
    }
  } catch (err) {
    console.error('Error assigning table:', err);
    alert('❌ Something went wrong.');
  }
}


    const activeTimers = {};
 function startTimer(id, startTime, cardElement, status) {
  const timerElem = document.getElementById(id);
  if (!timerElem || !cardElement) return;

  if (activeTimers[id]) clearInterval(activeTimers[id]);

  function update() {
    const diff = Date.now() - new Date(startTime);
    const minutes = Math.floor(diff / 60000);
    const seconds = Math.floor((diff % 60000) / 1000);
    timerElem.textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;

    // ✅ Change border shadow only if status is 'waiting' AND time > 20 min
    if ((status === 'waiting' || status === "preparing") && minutes >= 20) {
      cardElement.style.boxShadow = "0 0 15px 4px red";
    } else {
      cardElement.style.boxShadow = ""; // reset if condition not met
    }
  }

  update();
  activeTimers[id] = setInterval(update, 1000);
}



   document.addEventListener("DOMContentLoaded", () => {
  fetchTableData(); // Start fetching on page load
  setInterval(fetchTableData, 1000); // Every 3 sec
});
 // Refresh every 1 sec
   

    function toggleDropdown() {
      const dropdown = document.getElementById("dropdownMenu");
      dropdown.style.display = dropdown.style.display === "flex" ? "none" : "flex";
    }

    window.addEventListener("click", function (e) {
      const dropdown = document.getElementById("dropdownMenu");
      const icon = document.querySelector(".menu-icon-block");
      if (!dropdown.contains(e.target) && !icon.contains(e.target)) {
        dropdown.style.display = "none";
      }
    });

    
  </script>
   
 
</body>
</html>
